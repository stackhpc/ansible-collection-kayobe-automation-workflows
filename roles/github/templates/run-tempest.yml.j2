<%- if github_environment_selector == 'input' -%>
<%- set github_runs_on = github_runs_on + ['${{ inputs.kayobe_environment }}'] -%>
<%- set _ = workflow.update({"concurrency_group": "format('{0}-{1}', " + workflow.concurrency_group + ", '${{ inputs.kayobe_environment }}')" })  -%>
<%- set _ = github_default_registry.update({"url": "${{ vars[format('{0}_REGISTRY_URL', inputs.kayobe_environment)] }}" }) -%>
<%- set _ = github_default_registry.update({"username": "${{ vars[format('{0}_REGISTRY_USERNAME', inputs.kayobe_environment)] }}" }) -%>
<%- set _ = github_default_registry.update({"password": "${{ secrets[format('{0}_REGISTRY_PASSWORD', inputs.kayobe_environment)] }}" }) -%>
<%- set _ = github_kayobe_arguments.update({"KAYOBE_ENVIRONMENT": '${{ inputs.kayobe_environment }}'}) -%>
<%- set _ = github_default_kayobe_arguments.update({"KAYOBE_AUTOMATION_SSH_PRIVATE_KEY": "${{ secrets[format('{0}_KAYOBE_AUTOMATION_SSH_PRIVATE_KEY', inputs.kayobe_environment)] }}" }) -%>
<%- set _ = github_default_kayobe_arguments.update({"KAYOBE_VAULT_PASSWORD": "${{ secrets[format('{0}_KAYOBE_VAULT_PASSWORD', inputs.kayobe_environment)] }}" }) -%>
<%- set _ = github_default_kayobe_arguments.update({"TEMPEST_OPENRC": "${{ secrets[format('{0}_TEMPEST_OPENRC', inputs.kayobe_environment)] }}" }) -%>
<%- endif -%>
<%- if github_environment_selector == 'single' -%>
<%- set _ = github_kayobe_arguments.update({"KAYOBE_ENVIRONMENT": github_kayobe_environments[0] }) -%>
<%- endif -%>
%% lookup('template', 'tempest-header.yml.j2') %%
jobs:
  prepare-runner:
    uses: ./.github/workflows/prepare-runner.yml
  %% format_file_name(workflow.file_name) %%:
    runs-on: %% github_runs_on %%
    permissions:
      contents: read
      packages: %% 'read' if (github_registry.url | default(github_default_registry.url)) == 'ghcr.io' else 'none' %%
    container:
      image: %% github_registry.url | default(github_default_registry.url) %%/%% github_image_name %%:%% github_image_tag %%
      credentials:
        username: %% github_registry.username | default(github_default_registry.username) %%
        password: %% github_registry.password | default(github_default_registry.password) %%
    concurrency:
      group: %% workflow.concurrency_group %%
      cancel-in-progress: false
    timeout-minutes: %% github_timeout %%
    needs: prepare-runner
    steps:
<% if github_checkout_hook | length >= 1 %>
      %% github_checkout_hook | indent(width=6, first=false) %%
<% endif %>
      - name: Checkout kayobe config
        uses: actions/checkout@v3
        with:
          submodules: true
          path: kayobe-config

      - name: Symlink source checkout to expected location
        run: sudo ln -s $PWD/kayobe-config /src

<% if github_kayobe_hook | length >= 1 %>
      %% github_kayobe_hook | indent(width=6, first=false) %%
<% endif %>
      - name: Run ${{ github.event.inputs.test_suite }} tempest testsuite
        run: |
          /src/.automation/pipeline/tempest.sh -e ansible_user=stack
        env:
<% if github_environment_selector is not none %>
          KAYOBE_ENVIRONMENT: '%% github_kayobe_arguments.KAYOBE_ENVIRONMENT %%'
<% endif %>
          KAYOBE_VAULT_PASSWORD: "%% github_kayobe_arguments.KAYOBE_VAULT_PASSWORD | default(github_default_kayobe_arguments.KAYOBE_VAULT_PASSWORD) %%"
          KAYOBE_AUTOMATION_SSH_PRIVATE_KEY: "%% github_kayobe_arguments.KAYOBE_AUTOMATION_SSH_PRIVATE_KEY | default(github_default_kayobe_arguments.KAYOBE_AUTOMATION_SSH_PRIVATE_KEY) %%"
          KAYOBE_AUTOMATION_TEMPEST_LOADLIST: '%% github_kayobe_arguments.KAYOBE_AUTOMATION_TEMPEST_LOADLIST | default(github_default_kayobe_arguments.KAYOBE_AUTOMATION_TEMPEST_LOADLIST) %%'
          TEMPEST_PATTERN: '%% github_kayobe_arguments.TEMPEST_PATTERN | default(github_default_kayobe_arguments.TEMPEST_PATTERN) %%'
          TEMPEST_OPENRC: "%% github_kayobe_arguments.TEMPEST_OPENRC | default(github_default_kayobe_arguments.TEMPEST_OPENRC) %%"
          HOME: '%% github_kayobe_arguments.HOME | default(github_default_kayobe_arguments.HOME) %%'

      - name: Print stdout
        run: |
          cat /stack/tempest-artifacts/stdout.log || echo "stdout.log is missing"

      - name: Build artifact
        uses: actions/upload-artifact@v3
        with:
         name: tempest-artifacts
         path: |
           /stack/tempest-artifacts
           !/stack/tempest-artifacts/tempest.log

      - name: Fail if any tests did not pass
        run: |
           test $(wc -l < /stack/tempest-artifacts/failed-tests) -lt 1
<% if github_final_hook | length >= 1 +%>
      %% github_final_hook | indent(width=6, first=false) -%%
<% endif %>
